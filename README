Phase 3 information
Our code is organized into the `provided` directory. The
`testers/JottValidateTester.java` file has been modified to import our code and
provided code correctly.

From the main directory, build the `JottValidateTester` class with

        javac testers/JottValidateTester.java

Then from the root project directory, run

        java testers.JottValidateTester

Phase 2 information

Our code is organized into the `provided` directory. The
`testers/JottParserTester.java` file has been modified to import our code and
provided code correctly.

From the main directory, build the `JottParserTester` class with

        javac testers/JottParserTester.java

Then from the root project directory, run

        java testers.JottParserTester

---

Phase 1 information

Currently, as we work on phase 1, all of our code is in the `provided`
package. The professor said that code he created must remain there in
order to work with the test cases. For future phases he said we can
organize our code however we want.

Here is how to run the phase 1 unit tests.

From the main directory, build the `JottTokenizerTester` class with

        javac testers/JottTokenizerTester.java

This will compile into a bunch of .class files, and also automatically
compiles all the files that that test relies on to work.

To run the test, run

        java testers.JottTokenizerTester

Note that we must be in the root directory of the repository so that
`testers.JottTokenizerTester` has access to the test cases in
`tokenizerTestCases/`.

---

From the professor:

This file contains provided code, testers, and test cases.

provided shouls be a top level package in your provided directory
JottParserTester and JottTokenizerTester classes should be in a package call testers.

the testCases directories should be in the working directory of your project. 
